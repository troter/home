# -*- mode: ruby -*-

namespace :mercurial do
  namespace :extensions do
    extensions_rc = "~/.mercurial/extensions.rc".gsub(/~/, ENV['HOME'])
    extensions_dir = "~/.mercurial/extensions".gsub(/~/, ENV['HOME'])
    extensions = [
      %w[https://bitbucket.org/troter/hg-grepfile hg-grepfile grepfile.py grepfile],
      %w[https://bitbucket.org/troter/hg-now hg-now now.py now],
      %w[https://bitbucket.org/durin42/hg-git hg-git hggit hggit],
      %w[https://bitbucket.org/sjl/hg-review hg-review review review],
      %w[https://bitbucket.org/peerst/hgcollapse hgcollapse hgext/collapse.py collapse],
      %w[https://bitbucket.org/durin42/hgsubversion/ hgsubversion hgsubversion hgsubversion],
      ['', '', 'hg_diff_highlight.py', 'diff_highlight'],
    ]
    extension_dirs = extensions.map do |extension|
      _, name = extension
      name.empty? ? nil : File.join(extensions_dir, name)
    end.compact

    directory extensions_dir
    extensions.each do |extension|
      url, name = extension
      next if url.empty?
      file File.join(extensions_dir, name) => extensions_dir do
        cd extensions_dir do
          sh "hg clone #{url} #{name}"
        end
      end
    end

    desc "mercurial extensions install"
    task :install => extension_dirs + [:rc]

    desc "mercurial extensions rc"
    task :rc do
      rm_f extensions_rc
      touch extensions_rc
      File.open(extensions_rc, 'w') do |f|
        f.puts <<-RC.split(/\n/).map(&:lstrip)
          # -*- coding:utf-8; mode:conf; -*-
          # this file is generated by task.rake

          [extensions]
        RC
        extensions.each do |extension|
          _, name, file, entry = extension
          f.puts "#{entry} = #{File.join(extensions_dir, name, file)}"
        end
      end
    end

    desc "mercurial extensions update"
    task :update do
      extension_dirs.each do |extension_dir|
        if File.exists? extension_dir
          cd extension_dir do
            sh "hg pull"
            sh "hg update"
          end
        end
      end
    end
  end
end
